pipeline {
    agent any

    tools {
        // Make sure these names match your Jenkins Global Tool Configuration
        maven 'maven-3.9'
        jdk 'jdk17'
    }

    environment {
        JAVA_HOME = "${tool 'jdk17'}"
        MAVEN_HOME = "${tool 'maven-3.9'}"
        PATH = "${JAVA_HOME}\\bin;${MAVEN_HOME}\\bin;%PATH%"

        SPRING_PROFILES_ACTIVE = "dev"
        APP_NAME = "springboot-crud-h2"
        APP_VERSION = "0.0.1-SNAPSHOT"
    }

    stages {

        stage('Check Environment') {
            steps {
                echo "🔍 Checking PATH and tools"
                bat 'echo %PATH%'
                bat 'where cmd'
                bat 'java -version'
                bat 'mvn -version'
            }
        }

        stage('Checkout') {
            steps {
                echo '📥 Checking out source code from GitHub...'
                checkout scm
            }
        }

        stage('Build & Unit Tests') {
            steps {
                echo '🏗️ Building Spring Boot project and running unit tests...'
                bat 'mvn clean package'
            }
        }

        stage('Integration Tests') {
            steps {
                echo '🧪 Running integration tests...'
                // Add your integration test commands here
                // bat 'mvn verify -Pintegration-tests'
            }
        }

        stage('Staging Deployment') {
            steps {
                echo '🚀 Deploying to staging environment...'
                // Add your staging deployment commands here
            }
        }

        stage('Approval for Production') {
            steps {
                input message: "Approve deployment to production?", ok: "Deploy"
            }
        }

        stage('Production Deployment') {
            steps {
                echo '🚀 Deploying to production environment...'
                // Add your production deployment commands here
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline completed successfully!'
        }
        failure {
            echo '❌ Pipeline failed — check logs for errors.'
        }
    }
}
